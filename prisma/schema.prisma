// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  username     String @unique @db.VarChar(60)
  password     String @db.Char(44)
  passwordSalt String @db.Char(12)

  displayName String @db.VarChar(100)

  posts      JournalPost[]
  dailyGoals DailyGoal[]
  ToDo       ToDo[]

  lastJournal    DateTime? @db.Date
  lastCompletion DateTime? @db.Date
}

// Daily Goal =================================================================

model DailyGoal {
  id              Int    @id @default(autoincrement())
  partialCriteria String @db.VarChar(255)
  totalCriteria   String @db.VarChar(255)
  title           String @db.VarChar(100)

  subject   User @relation(fields: [subjectId], references: [id])
  subjectId Int

  completion Completion[]
}

enum CompletionCriteria {
  Partial
  Total
}

model Completion {
  date     DateTime           @db.Date
  criteria CompletionCriteria

  goalId Int
  goal   DailyGoal @relation(fields: [goalId], references: [id])

  @@unique([goalId, date])
}

// Journals ===================================================================

model JournalPost {
  date    DateTime @default(now()) @db.Date
  content String?

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  @@unique([authorId, date])
}

// To-do List =================================================================

enum ToDoProgress {
  NotDone
  Doing
  Done
}

model ToDo {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  deadline  DateTime?
  priority  Int          @db.SmallInt
  progress  ToDoProgress

  subject   User @relation(fields: [subjectId], references: [id])
  subjectId Int
}
